###################################################
# This file contains the default configuration of
# the server. CHANGE WITH CARE
# use config.properties instead to overwrite local changes
#####################################################

# global configuration 
debug                           = false

# configuration set for the diagnostic manager "diagMgr"
org.brackit.server.util.diag.enable             = true
org.brackit.server.util.diag.fileName           = XTCserver.log
org.brackit.server.util.diag.maxFileSize        = 4000000
org.brackit.server.util.diag.exceptionDescWidth = 50


# configuration set for the connection manager "connectionManager"
org.brackit.server.connection.maxConnections        = 25
org.brackit.server.connection.connectionTimeout     = 30000
org.brackit.server.connection.shutdownRetryInterval = 500
org.brackit.server.connection.maxShutdownRetries    = 40
org.brackit.server.connection.dbPort                = 24201
org.brackit.server.connection.serverPort            = 24203
org.brackit.server.connection.httpPort              = 24280
org.brackit.server.connection.httpMaxClients        = 2
org.brackit.server.connection.ftpPort               = 24202
org.brackit.server.connection.ftpMaxClients         = 2

# sax processing
org.brackit.server.connection.sax.transportSize = 25000
org.brackit.xquery.node.parser.DocumentParser.ignoreComments = false

# configuration set debugging "Query Processor"
org.brackit.server.xmlSvc.XTCxqueryProcessor.outputPath = ./tempfiles


# configuration set "Query Optimizer"
#0 = cost-based Query Optimizer; 1 = cost-based Optimizer with Auto Indexing
org.brackit.server.xmlSvc.XTCxqueryProcessor.version     		= 0
org.brackit.server.xmlSvc.XTCxqueryProcessor.compilerRules      = ./compilerRules.xml
org.brackit.server.xmlSvc.Optimizer.PlanGenerator.configFile 	=./optimizerConfiguration.xml
org.brackit.server.xmlSvc.Optimizer.ExecutionEngine.parallel.merge  = false
org.brackit.server.xmlSvc.Optimizer.ExecutionEngine.parallel.scan = false
org.brackit.server.xmlSvc.Optimizer.ExecutionEngine.parallel.split = false
org.brackit.server.xmlSvc.Optimizer.ExecutionEngine.injectSplit = true

# Cost model, IO-cost constants
org.brackit.server.xmlSvc.Optimizer.costmodel.DocumentIndexRecordAccessCost	= 2.3
org.brackit.server.xmlSvc.Optimizer.costmodel.ElementIndexRecordAccessCost	= 10.0
org.brackit.server.xmlSvc.Optimizer.costmodel.PathIndexRecordAccessCost		= 10.8
org.brackit.server.xmlSvc.Optimizer.costmodel.ContetIndexRecordAccessCost	= 10.8
org.brackit.server.xmlSvc.Optimizer.costmodel.CASIndexRecordAccessCost		= 11.0
org.brackit.server.xmlSvc.Optimizer.costmodel.AttributeNavigationCost 		= 0.05

# Cost model, CPU-cost constants
org.brackit.server.xmlSvc.Optimizer.costmodel.predicateEvaluationCostCPU 	= 0.001
org.brackit.server.xmlSvc.Optimizer.costmodel.weightCPU						= 1.0
org.brackit.server.xmlSvc.Optimizer.costmodel.hashingCostCPU				= 1.5
org.brackit.server.xmlSvc.Optimizer.costmodel.probingCostCPU				= 1.2
org.brackit.server.xmlSvc.Optimizer.costmodel.StackTreeAxisComparisonCostCPU= 0.0011

#configuration set debugging "Query Optimizer"
org.brackit.server.xmlSvc.queryOptimizer.debugTimes     = false
org.brackit.server.xmlSvc.queryOptimizer.clearBufferBeforeExecution  = false

org.brackit.server.xmlSvc.queryOptimizer.planOutput 	= searchspace/
 # please let those expensive dump operations at default -> false !!
org.brackit.server.xmlSvc.queryOptimizer.dumpQEP       = false
org.brackit.server.xmlSvc.queryOptimizer.dumpQGM       =  false
org.brackit.server.xmlSvc.queryOptimizer.queries 		= queries/
org.brackit.server.xmlSvc.queryOptimizer.qgmoutput	    = qgmoutput/

# font settings for dot generation
org.brackit.server.xmlSvc.queryOptimizer.fontSize 		= 14.0
org.brackit.server.xmlSvc.queryOptimizer.fontName		= Helvetica
org.brackit.server.xmlSvc.queryOptimizer.supressIDs		= false
org.brackit.server.xmlSvc.queryOptimizer.monochrome		= false





# configuration set "Scheduler"
org.brackit.server.tx.thread.jobScheduler.minWorkerThreads = 1
org.brackit.server.tx.thread.jobScheduler.maxWorkerThreads = 30
org.brackit.server.tx.thread.jobScheduler.maxWorkerThreadPoolTime = 20000


# select index page version (type): 0 = default, 1 = slotted, 2 = keyValue
org.brackit.server.store.index.pageVersion = 1

# configuration set "taMgr"
org.brackit.server.tx.taMgr.maxTransactions = 50
  # max 15 min per Transaction (in milliseconds)
org.brackit.server.tx.taMgr.maxTransactionRuntime           = 900000
org.brackit.server.tx.taMgr.deadlockDetectionInterval       = 100
org.brackit.server.tx.taMgr.logDeadlocks    = true    
org.brackit.server.tx.taMgr.logDirectory    = ./logfiles
  # (-> tx000000001.log, tx000000002.log, etc.)
org.brackit.server.tx.taMgr.logBasename     = tx
  # max size of log file segments: x * 1KB (1KB = 1024 bytes)
org.brackit.server.tx.taMgr.logSegmentSize  = 10000
org.brackit.server.tx.taMgr.pathLockVersion = 2
org.brackit.server.tx.taMgr.maxLocks        = 200000
org.brackit.server.tx.taMgr.lockWaitTimeout = 20000


# use compact 'hash' (default) or verbose 'explicit' lock names for deweyIDs
org.brackit.server.tx.taMgr.locking.util.deweyIDLocks = hash

# configuration set "lockMgr"
org.brackit.server.tx.taMgr.locking.services.metaLockService.lockMaxEscalationCount     = 1920
org.brackit.server.tx.taMgr.locking.services.metaLockService.lockEscalationGain         = 2.0
org.brackit.server.tx.taMgr.locking.services.metaLockService.useLevelLockEscalation     = false
org.brackit.server.tx.taMgr.locking.services.metaLockService.simulateSequentialLabeling = false
org.brackit.server.tx.latch.enable=true


# configuration set "metaDataMgr"
  # false = no automatic statistics gathering during document storage, true = automatic statistics gathering
  # during document storage
org.brackit.server.metaData.statistics.index.auto        = true
org.brackit.server.metaData.statistics.document.auto     = true
org.brackit.server.metaData.statistics.updateCounter     = false
org.brackit.server.metaData.statistics.pathSynopsis.auto = true

# configuration set "AutoIndexManager"
  # There are five modes - none (no autoindex), manual(materialization by admin), eager, lazy, scheduled
org.brackit.server.autoIndex.mode		= none
org.brackit.server.autoIndex.recommend.element = true
org.brackit.server.autoIndex.recommend.content = true
org.brackit.server.autoIndex.recommend.path    = true
org.brackit.server.autoIndex.recommend.cas     = true
 # specify how many indexes can be built automatically in parallel, 0 = unlimited
org.brackit.server.autoIndex.parallel          = 0
org.brackit.server.autoIndex.waitTime		   = 1000
 # prune short running queries from being analyzed by AI, -1 means no pruning, value means maximum overhead for analyzing
org.brackit.server.autoIndex.heuristicPrune    = 0.10
 # maximum space for soft indexes for the entire xtc instance (-1 means unlimited)
org.brackit.server.autoIndex.indexSpaceMB      = 5
 # maximum soft index space in percent for the entire xtc instance (-1 means unlimited)
org.brackit.server.autoIndex.indexSpacePercent = -1
 # if virtual index listeners are created or not
org.brackit.server.autoIndex.virtualIndexesListenForUpdate = true
 # ai candidate generation methods (true|false)
org.brackit.server.xmlSvc.queryOptimizer.aiStringAnalysis = false
org.brackit.server.xmlSvc.queryOptimizer.aiASTAnalysis = false
org.brackit.server.xmlSvc.queryOptimizer.aiQGMAnalysis = true
org.brackit.server.xmlSvc.queryOptimizer.aiQGMAnalysisV2 = false
org.brackit.server.xmlSvc.queryOptimizer.aiIdxSearchAnalysis = false
 # if cas/path candidates should create path/cas counterparts
org.brackit.server.xmlSvc.queryOptimizer.aiCasToPath = true
org.brackit.server.xmlSvc.queryOptimizer.aiPathToCas = true
 # if ai candidates not used by the optimizer should be removed
org.brackit.server..xmlSvc.queryOptimizer.removeNotUsed = true
 
# Sorting defaults (used also in Self-Tuning)
 # 
org.brackit.server.util.sort.memory = 25000000
org.brackit.server.util.sort.listLength = 10000
org.brackit.server.util.sort.inputBuffer = 8192
org.brackit.server.util.sort.outputBuffer = 8192
	
# Logging
 # 0: object-oriented log buffer, 1: block-oriented log buffer
org.brackit.server.log.buffer.impl = 1
 # 16 * 1024 * 1024 == 16777216
org.brackit.server.log.buffer.capacity = 16777216
 # 256 * 1024 == 262144
org.brackit.server.log.buffer.block.size = 262144
org.brackit.server.log.flush.enable=true
org.brackit.server.log.append.enable=true


# SAM settings
org.brackit.server.sam.enable=true
org.brackit.server.sam.host=localhost
org.brackit.server.sam.port=9999


# Store settings:
org.brackit.server.io.file.beforeImage=true
org.brackit.server.io.file.store.root=cntfiles
org.brackit.server.io.file.file.prefix=st
org.brackit.server.io.file.file.suffix=.xtc
org.brackit.server.io.file.meta.suffix=.meta
org.brackit.server.io.file.init.size=500
org.brackit.server.io.file.ext.ratio=1.0
org.brackit.server.io.file.cluster.size=32


# Buffer settings:
org.brackit.server.propCtrl.impl=1
org.brackit.server.propCtrl.fix.ignore=false
  #possible policies:
  #ADLRU3, CFDC7, CFDC8, CFLRU0, CFLRU7, CLOCK, GCLOCK, FIFO, LRD2, LRU2, LRUk2, LRUWSR, REF
org.brackit.server.propCtrl.policy=CLOCK
org.brackit.server.propCtrl.policy.lruk.k=2
org.brackit.server.propCtrl.policy.lruk.crp=0
org.brackit.server.propCtrl.policy.lruk.ripfactor=2
org.brackit.server.propCtrl.policy.adlru.minlc=0.1
org.brackit.server.propCtrl.policy.cflru.window=0.5
org.brackit.server.propCtrl.policy.cfdc.window=0.5
org.brackit.server.propCtrl.policy.cfdc.clustersize=32
org.brackit.server.propCtrl.policy.ref.window=0.5
org.brackit.server.propCtrl.policy.ref.vbcnt=4
org.brackit.server.propCtrl.policy.ref.blocksize=32

#self tuning
org.brackit.server.propCtrl.selftuning.enabled					= false
org.brackit.server.propCtrl.selftuning.debugOutput				= false
org.brackit.server.propCtrl.selftuning.useScheduler 			= true
org.brackit.server.propCtrl.selftuning.schedulerInterval 		= 30000
org.brackit.server.propCtrl.selftuning.resizingWindow 			= 1638400
org.brackit.server.propCtrl.selftuning.costPR 					= 10
org.brackit.server.propCtrl.selftuning.costPW 					= 30
	#possible strategies: COST, GOAL, SIMULATION
org.brackit.server.propCtrl.selftuning.decisionStrategy 		= SIMULATION
	#default response time goal must be >= 0
org.brackit.server.propCtrl.selftuning.defaultGoalResponseTime  = 0


# XQuery
org.brackit.xquery.debug=false
org.brackit.xquery.unnest=false
org.brackit.xquery.variablePullup=false
org.brackit.xquery.joinDetection=false
org.brackit.xquery.debugDir=/media/ramdisk/

#Default documents
httpDefaultDoc=index.html
httpDefaultXsl=default.xsl

# directories
  # used for temporary data such as external sort files
dirTempFiles=tempfiles
dirLogFiles=logfiles


# system container:
org.brackit.server.syscnt.filename=system.cnt
org.brackit.server.syscnt.blocksize=8192
org.brackit.server.syscnt.buffersize=512
org.brackit.server.syscnt.bufferminsize=200
org.brackit.server.syscnt.inisize=250
org.brackit.server.syscnt.extsize=250


# user container:
cnt0Filename=user0.cnt
cnt0BlockSize=4096
cnt0BufferSize=250
cnt0BufferMinSize=50
cnt0InitialSize=500
cnt0ExtendSize=500

#cnt1Filename=user1.cnt
#cnt1BlockSize=8192
#cnt1BufferSize=250
#cnt1BufferMinSize=50
#cnt1InitialSize=500
#cnt1ExtendSize=500

#cnt2Filename=user2.cnt
#cnt2BlockSize=16384
#cnt2BufferSize=250
#cnt2BufferMinSize=50
#cnt2InitialSize=500
#cnt2ExtendSize=500

# Remark: Max. cntXBlockSize == 0xFFFFFF == 16777215
# Remark: Max. cntXInitialSize == Max. cntXExtendSize == 0xFFFF == 65535
